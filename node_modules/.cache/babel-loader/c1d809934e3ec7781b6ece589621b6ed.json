{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moinm\\\\Downloads\\\\project_practice\\\\roboapp\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\nimport { setSearchField } from '../actions.js';\nimport { searchRobots, requestRobots } from '../reducers';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    isPending: state.requestRobots.isPending,\n    robots: state.requestRobots.robots,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange,\n          robots = _this$props.robots,\n          isPending = _this$props.isPending;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? React.createElement(\"h1\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"RoboFriends\"), React.createElement(SearchBox, {\n      searchChange: onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ErrorBoundry, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\moinm\\Downloads\\project_practice\\roboapp\\src\\containers\\App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","ErrorBoundry","setSearchField","searchRobots","requestRobots","mapStateToProps","state","searchField","isPending","robots","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","componentDidMount","props","render","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA8B,eAA9B;AACA,SAAQC,YAAR,EAAsBC,aAAtB,QAA0C,aAA1C;;AAGA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACH,YAAN,CAAmBI,WAD1B;AAENC,IAAAA,SAAS,EAAEF,KAAK,CAACF,aAAN,CAAoBI,SAFzB;AAGNC,IAAAA,MAAM,EAAEH,KAAK,CAACF,aAAN,CAAoBK,MAHtB;AAINC,IAAAA,KAAK,EAAEJ,KAAK,CAACF,aAAN,CAAoBM;AAJrB,GAAP;AAMA,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD7B;AAENC,IAAAA,eAAe,EAAE,MAAML,QAAQ,CAACR,aAAa,EAAd;AAFzB,GAAP;AAIA,CALD;;AAOA,MAAMc,GAAN,SAAkBtB,SAAlB,CAA4B;AAE3BuB,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWH,eAAX;AACA;;AAGDI,EAAAA,MAAM,GAAI;AAAA,wBACkD,KAAKD,KADvD;AAAA,UACDb,WADC,eACDA,WADC;AAAA,UACYM,cADZ,eACYA,cADZ;AAAA,UAC4BJ,MAD5B,eAC4BA,MAD5B;AAAA,UACoCD,SADpC,eACoCA,SADpC;AAET,UAAMc,cAAc,GAAGb,MAAM,CAACc,MAAP,CAAcC,KAAK,IAAI;AAC7C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCpB,WAAW,CAACmB,WAAZ,EAAlC,CAAP;AACA,KAFsB,CAAvB;AAID,WAAOlB,SAAS,GACf;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADe,GAId;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADC,EAED,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEK,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC,EAGD,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAES,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CADF,CAHC,CAJF;AAcG;;AA3BwB;;AAgC5B,eAAezB,OAAO,CAACQ,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\nimport { setSearchField} from '../actions.js';\r\nimport {searchRobots, requestRobots} from '../reducers';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\terror: state.requestRobots.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobots: () => dispatch(requestRobots())\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestRobots();\r\n\t}\r\n\r\n\r\n\trender () {\r\n\t\tconst { searchField, onSearchChange, robots, isPending } = this.props;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t\t})\r\n\r\n\treturn isPending ?\r\n\t\t<h1 className='tc'>Loading</h1>\r\n\t\r\n\t: (\r\n\t  <div className='tc'>\t\r\n\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t<SearchBox searchChange={onSearchChange}/>\r\n\t\t<Scroll>\r\n\t\t  <ErrorBoundry>\r\n\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t  </ErrorBoundry>\t\r\n\t\t</Scroll>\r\n\t  </div>\t\t\r\n\r\n\t);}\r\n  }\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}